import java.util.Scanner;
public class rc4 {
 public static void main(String[] args) throws Exception {
 Scanner sc = new Scanner(System.in);
 System.out.print("Enter key: ");
 byte[] key = sc.nextLine().getBytes();
 System.out.print("Enter plaintext: ");
 byte[] plaintext = sc.nextLine().getBytes();
 byte[] encrypted = rc4(plaintext, key);
 System.out.println("Encrypted (hex): " + bytesToHex(encrypted));
 byte[] decrypted = rc4(encrypted, key);
 System.out.println("Decrypted: " + new String(decrypted));
 sc.close();
 }
 private static byte[] rc4(byte[] data, byte[] key) {
 byte[] S = new byte[256];
 for (int i = 0; i < 256; i++) S[i] = (byte) i;
 int j = 0;
 for (int i = 0; i < 256; i++) {
 j = (j + (S[i] & 0xFF) + (key[i % key.length] & 0xFF)) & 0xFF;
 byte temp = S[i]; S[i] = S[j]; S[j] = temp;
 }
 int i = 0; j = 0;
 byte[] result = new byte[data.length];
 for (int n = 0; n < data.length; n++) {
 i = (i + 1) & 0xFF;
 j = (j + (S[i] & 0xFF)) & 0xFF;
 byte temp = S[i]; S[i] = S[j]; S[j] = temp;
 int k = (S[i] + S[j]) & 0xFF;
 result[n] = (byte) (data[n] ^ S[k]);
 }
 return result;
 }
 private static String bytesToHex(byte[] bytes) {
 StringBuilder sb = new StringBuilder();
 for (byte b : bytes) sb.append(String.format("%02X", b));
return sb.toString();
 }
}
